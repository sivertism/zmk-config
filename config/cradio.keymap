// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
        };

        mylt: mylt {
            compatible = "zmk,behavior-hold-tap";
            label = "MYLT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ctrltab {
            bindings = <&kp LC(TAB)>;
            key-positions = <10 0>;
        };

        alttab {
            bindings = <&kp LA(TAB)>;
            key-positions = <20 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E        &kp R        &kp T              &kp Y            &kp U         &kp I        &kp O         &kp P
&hml LSHIFT A   &hml LCTRL S  &hml LALT D  &hml LGUI F  &kp G              &kp H            &hmr RGUI J   &hmr RALT K  &hmr RCTRL L  &hmr RSHFT SEMICOLON
&ht LEFT_ALT Z  &kp X         &kp C        &kp V        &kp B              &kp N            &kp M         &kp COMMA    &kp DOT       &kp FSLH
                                           &mylt 1 ESC  &ht LSHFT SPACE    &ht RCTRL ENTER  &mylt 2 BSPC
            >;
        };

        left_layer {
            bindings = <
&kp TAB     &kp N7  &kp N8  &kp N9  &kp MINUS    &kp GRAVE  &kp SQT        &kp BSLH          &kp LBKT              &kp RBKT
&kp ESCAPE  &kp N4  &kp N5  &kp N6  &kp PLUS     &kp CARET  &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp N0      &kp N1  &kp N2  &kp N3  &kp EQUAL    &kp MINUS  &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE
                            &trans  &trans       &mo 3      &kp DEL
            >;
        };

        right_layer {
            bindings = <
&trans    &trans  &trans    &trans    &trans       &trans     &kp PG_UP  &kp HOME  &trans     &trans
&kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &trans
&trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PG_DN  &kp END   &trans     &trans
                            &mo 3     &trans       &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &kp F1  &kp F2  &kp F3  &kp F10    &trans        &trans        &trans        &trans        &sys_reset
&bootloader  &kp F4  &kp F5  &kp F6  &kp F11    &trans        &trans        &trans        &trans        &bootloader
&bt BT_CLR   &kp F7  &kp F8  &kp F9  &kp F12    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &to 4
                             &trans  &trans     &trans        &trans
            >;
        };

        gaming_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R        &trans     &trans  &trans  &trans  &trans
&kp LCTRL  &kp A  &kp S  &kp D     &kp F        &trans     &trans  &trans  &trans  &trans
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V        &trans     &trans  &trans  &trans  &to 0
                         &kp LALT  &kp SPACE    &kp ENTER  &trans
            >;
        };
    };
};
