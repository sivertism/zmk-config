/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB        &kp Q  &kp W  &kp E     &kp R  &kp T                   &kp Y                     &kp U  &kp I          &kp O    &kp P     &kp GRAVE
&mt LCTRL ESC  &kp A  &kp S  &kp D     &kp F  &kp G                   &kp H                     &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C     &kp V  &kp B                   &kp N                     &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp BACKSLASH
                             &kp LGUI  &mo 1  &mt LEFT_SHIFT SPACE    &mt RIGHT_CONTROL RETURN  &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB       &kp N1    &kp N7  &kp N8    &kp N9  &kp MINUS    &kp LBKT       &kp N7        &kp N8        &kp LBKT      &kp RBKT      &kp LS(LBRC)
&kp LS(RBRC)  &kp FSLH  &kp N4  &kp N5    &kp N6  &kp PLUS     &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(PIPE)
&kp LSHFT     &kp N0    &kp N1  &kp N2    &kp N3  &kp EQUAL    &trans         &trans        &trans        &kp LS(LBRC)  &kp LS(RBRC)  &kp BSLH
                                &kp LGUI  &trans  &kp SPACE    &kp RET        &mo 3         &kp DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL      &kp AT      &kp HASH       &kp DLLR      &kp PRCNT        &kp CARET      &kp PAGE_UP        &kp PAGE_UP  &kp LPAR      &kp RPAR      &kp BSPC
&kp GRAVE  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LEFT       &kp DOWN           &kp UP       &kp RIGHT     &kp HOME      &kp END
&kp LSHFT  &trans        &trans      &trans         &trans        &trans           &kp LS(UNDER)  &kp LS(PAGE_DOWN)  &kp PG_DN    &kp LS(LBRC)  &kp LS(RBRC)  &kp BSLH
                                     &kp LGUI       &mo 3         &kp SPACE        &kp RET        &trans             &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
